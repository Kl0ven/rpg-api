name: CI/CD

on: [push]

jobs:
  Test:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          apt-get install -y libcairo2
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Install Node JS 12.X
        uses: actions/setup-node@v1
        with:                               
          node-version: 12.X

      - name: Install Newman dependency 
        run: npm install newman

      - name: Run API in Background
        env:
          MODE: CI
        run: |
          python -m rpg_api &
          sleep 10

      - name: Test with newman
        run: |
          cd rpg_api/test
          newman run rpg_api_collection.postman_collection.json -e rpg_api.postman_environment.json 

  build-n-publish:
    name: Build and publish To Docker Hub üê≥
    needs: Test
    runs-on: ubuntu-18.04
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@master
    - name: Docker meta
      id: docker_meta
      uses: crazy-max/ghaction-docker-meta@v1
      with:
        images: kloven/rpg-api # list of Docker images to use as base name for tags
        tag-sha: true # add git short SHA as Docker tag
    - name: Output tag
      run: echo "${{ steps.docker_meta.outputs.tags }}"

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Push to Docker Hub
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
    - name: Docker Hub Description
      uses: peter-evans/dockerhub-description@v2.1.0
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKERHUB_REPOSITORY: kloven/rpg-api