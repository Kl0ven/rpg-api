openapi: 3.0.0
servers:
- url: https://localhost:8080
  description: Local server 
info:
  description: Simple API to play RPG âš”
  version: 0.1.0
  title: RPG API
  contact:
    email: jloup.m@gmail.com
  license:
    name: MIT License
    url: 'http://opensource.org/licenses/MIT'
tags:
  - name: Information
    description: All possible informations
  - name: Action
    description: All possible actions 
paths:
  /balance/{user}:
    get:
      tags:
        - Information
      summary: Get balance information for a specific user
      operationId: get_balance
      description: |
        Return the balance of a specific user 
      parameters:
        - in: path
          name: user
          description: the username of the user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Balance information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/balance'
        '400':
          description: bad input parameter
      x-openapi-router-controller: rpg_api.controllers.balance_controller
  /inventory/{user}:
    get:
        tags:
          - Information
        summary: Get inventroy information for a specific user
        operationId: get_inventory
        description: |
          Return the inventory of a specific user 
        parameters:
          - in: path
            name: user
            description: the username of the user
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Inventory information
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/inventory'
          '400':
            description: bad input parameter
        x-openapi-router-controller: rpg_api.controllers.inventory_controller
  /image/{user}/{slot}:
    get:
      tags:
        - Information
      summary: Get Image for a specific loot (slot) for a user
      operationId: get_image
      description: |
        Return Image for a specific loot (slot) for a user
      parameters:
        - in: path
          name: user
          description: the username of the user
          required: true
          schema:
            type: string
        - in: path
          name: slot
          description: the slot of the loot
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Loot image in PNG format
          content:
            image/png:
              schema:
                type: string
                format: binary
        '400':
          description: bad input parameter
      x-openapi-router-controller: rpg_api.controllers.image_controller
  /open_lootbox/{user}:
    post:
      tags:
        - Action
      summary: Open lootbox from user wich is at slot
      operationId: open_lootbox
      description: |
        Open the lootbox from user wich is at slot in inventory
      parameters:
        - in: path
          name: user
          description: the username of the user
          required: true
          schema:
            type: string
      requestBody:
          description: the slot(s) of the lootbox(es)
          required: true
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
      responses:
        '200':
          description: Loots
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inventory'
        '400':
          description: bad input parameter
        '412':
          description: Not enough money
      x-openapi-router-controller: rpg_api.controllers.lootbox_controller
components:
  schemas:
    balance:
      type: object
      properties:
        balance:
          type: number
      example:
        balance: 300
    inventory:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/lootbox'
          - $ref: '#/components/schemas/loot'
    lootbox:
      type: object
      properties:
        name: 
          type: string
        price:
          type: number
        slot:
          type: integer
        rarety:
          type: object
          properties:
            name:
              type: string
            value:
              type: integer
    loot:
      type: object
      properties:
        name: 
          type: string
        slot:
          type: integer
        image_url:
          type: string
        type:
          type: object
          properties:
            name:
              type: string
            value:
              type: integer