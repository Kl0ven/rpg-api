# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from rpg_api.swagger_models.base_model_ import Model
from rpg_api.swagger_models.lootbox_rarety import LootboxRarety  # noqa: F401,E501
from rpg_api import util


class Lootbox(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, price: float=None, slot: int=None, rarety: LootboxRarety=None):  # noqa: E501
        """Lootbox - a model defined in Swagger

        :param name: The name of this Lootbox.  # noqa: E501
        :type name: str
        :param price: The price of this Lootbox.  # noqa: E501
        :type price: float
        :param slot: The slot of this Lootbox.  # noqa: E501
        :type slot: int
        :param rarety: The rarety of this Lootbox.  # noqa: E501
        :type rarety: LootboxRarety
        """
        self.swagger_types = {
            'name': str,
            'price': float,
            'slot': int,
            'rarety': LootboxRarety
        }

        self.attribute_map = {
            'name': 'name',
            'price': 'price',
            'slot': 'slot',
            'rarety': 'rarety'
        }
        self._name = name
        self._price = price
        self._slot = slot
        self._rarety = rarety

    @classmethod
    def from_dict(cls, dikt) -> 'Lootbox':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The lootbox of this Lootbox.  # noqa: E501
        :rtype: Lootbox
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Lootbox.


        :return: The name of this Lootbox.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Lootbox.


        :param name: The name of this Lootbox.
        :type name: str
        """

        self._name = name

    @property
    def price(self) -> float:
        """Gets the price of this Lootbox.


        :return: The price of this Lootbox.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price: float):
        """Sets the price of this Lootbox.


        :param price: The price of this Lootbox.
        :type price: float
        """

        self._price = price

    @property
    def slot(self) -> int:
        """Gets the slot of this Lootbox.


        :return: The slot of this Lootbox.
        :rtype: int
        """
        return self._slot

    @slot.setter
    def slot(self, slot: int):
        """Sets the slot of this Lootbox.


        :param slot: The slot of this Lootbox.
        :type slot: int
        """

        self._slot = slot

    @property
    def rarety(self) -> LootboxRarety:
        """Gets the rarety of this Lootbox.


        :return: The rarety of this Lootbox.
        :rtype: LootboxRarety
        """
        return self._rarety

    @rarety.setter
    def rarety(self, rarety: LootboxRarety):
        """Sets the rarety of this Lootbox.


        :param rarety: The rarety of this Lootbox.
        :type rarety: LootboxRarety
        """

        self._rarety = rarety
